<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kaluo-zz.github.io</id>
    <title>KALUO</title>
    <updated>2019-12-12T09:31:28.849Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://kaluo-zz.github.io"/>
    <link rel="self" href="https://kaluo-zz.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://kaluo-zz.github.io/images/avatar.png</logo>
    <icon>https://kaluo-zz.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, KALUO</rights>
    <entry>
        <title type="html"><![CDATA[ssh免密登录服务器]]></title>
        <id>https://kaluo-zz.github.io/post/ssh-mian-mi-deng-lu-fu-wu-qi</id>
        <link href="https://kaluo-zz.github.io/post/ssh-mian-mi-deng-lu-fu-wu-qi">
        </link>
        <updated>2019-12-12T09:26:41.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>在本地机器上产生公钥私钥对<pre><code>ssh-keygen
</code></pre>
</li>
<li>将公钥复制到远程服务器上<pre><code>ssh-copy-id -i .ssh/id_rsa.pub username@192.168.0.224
</code></pre>
</li>
<li>免密登录<pre><code>ssh username@192.168.0.244
</code></pre>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Labelme标注格式转coco格式]]></title>
        <id>https://kaluo-zz.github.io/post/labelme-biao-zhu-ge-shi-zhuan-coco-ge-shi</id>
        <link href="https://kaluo-zz.github.io/post/labelme-biao-zhu-ge-shi-zhuan-coco-ge-shi">
        </link>
        <updated>2019-12-02T08:05:15.000Z</updated>
        <content type="html"><![CDATA[<p>github<a href="https://github.com/wucng/TensorExpand/tree/master/TensorExpand/Object%20detection/Data_interface/MSCOCO">链接</a><br>
一些注意事项<a href="https://blog.csdn.net/weixin_43081805/article/details/88534397">-&gt;</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ubuntu18.04安装Torch]]></title>
        <id>https://kaluo-zz.github.io/post/ubuntu1804-an-zhuang-torch</id>
        <link href="https://kaluo-zz.github.io/post/ubuntu1804-an-zhuang-torch">
        </link>
        <updated>2019-11-13T13:34:26.000Z</updated>
        <content type="html"><![CDATA[<p>基本流程按照<a href="http://torch.ch/docs/getting-started.html">官网</a>介绍的安装即可。<br>
安装过程中出现了两个问题：</p>
<ol>
<li>gcc版本太高。电脑gcc版本为gcc-7，降低版本号到gcc-6即可。</li>
<li>error: &quot;more than one operator &quot;==&quot; matches these operands&quot;：原因是cuda和torch的头文件都提供了相同的重载运算符，在命令行中输入<pre><code class="language-bash"> export TORCH_NVCC_FLAGS=&quot;-D__CUDA_NO_HALF_OPERATORS__&quot;
</code></pre>
</li>
</ol>
<p>禁止使用cuda头文件编译torch即可。后继续使用<code>./install.sh</code>安装。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[重要性采样（Importance Sampling）]]></title>
        <id>https://kaluo-zz.github.io/post/chong-yao-xing-cai-yang-importance-sampling</id>
        <link href="https://kaluo-zz.github.io/post/chong-yao-xing-cai-yang-importance-sampling">
        </link>
        <updated>2019-11-05T12:51:44.000Z</updated>
        <summary type="html"><![CDATA[<p>如果一个分布的概率密度函数为p(x)，其累积分布函数cdf(x)为连续的严格增函数，且存在逆函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mtext>cdf</mtext><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>(</mo><mi>y</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">\text{cdf}^{-1}(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.148448em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord text"><span class="mord">cdf</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984479999999999em;"><span style="top:-3.14734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，那么我们可以利用累积分布函数的逆函数来生成服从该分布的样本。</p>
]]></summary>
        <content type="html"><![CDATA[<p>如果一个分布的概率密度函数为p(x)，其累积分布函数cdf(x)为连续的严格增函数，且存在逆函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mtext>cdf</mtext><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>(</mo><mi>y</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">\text{cdf}^{-1}(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.148448em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord text"><span class="mord">cdf</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984479999999999em;"><span style="top:-3.14734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，那么我们可以利用累积分布函数的逆函数来生成服从该分布的样本。</p>
<!-- more -->
<p>基础概念：</p>
<ol>
<li>累积分布函数(Cumulative Distribution Function, CDF)</li>
<li>概率密度函数(Probability Distribution Function, PDF)</li>
<li>采样(Sampling)</li>
<li>重要性采样(Importance Sampling)</li>
</ol>
<p>在计算机中，如何生成符合某种概率密度函数p(x)的样本？<br>
采样可分为均匀分布采样、离散分布采样、连续分布采样，这里关注连续分布采样。</p>
<p>如果一个分布的概率密度函数为p(x)，其累积分布函数cdf(x)为连续的严格增函数，且存在逆函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mtext>cdf</mtext><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>(</mo><mi>y</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">\text{cdf}^{-1}(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.148448em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord text"><span class="mord">cdf</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984479999999999em;"><span style="top:-3.14734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，那么我们可以利用累积分布函数的逆函数来生成服从该分布的样本。</p>
<p>(能够计算样本的概率密度函数值p(x)，不表示能够产生符合概率密度函数p(x)的样本。)</p>
<p>假设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ξ</mi></mrow><annotation encoding="application/x-tex">\xi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.04601em;">ξ</span></span></span></span>是[0, 1]区间上均与分布的随机变量，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mtext>cdf</mtext><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>(</mo><mi>ξ</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">\text{cdf}^{-1}(\xi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.148448em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord text"><span class="mord">cdf</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984479999999999em;"><span style="top:-3.14734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04601em;">ξ</span><span class="mclose">)</span></span></span></span>服从概率密度函数为p(x)的分布。</p>
<p>但当p(x)非常复杂(比如由神经网络构成)，其累积分布函数的逆函数难以计算，那么就难以直接对p(x)进行采样。这时往往需要使用一些间接的采样策略，这就引入了我们将要介绍的重要性采样。</p>
<p>一般我们采样的目的是计算某个分布的期望值，也就是</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>=</mo><msub><mi>E</mi><mi>p</mi></msub><mo>[</mo><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>]</mo><mo>=</mo><msub><mo>∫</mo><mi>x</mi></msub><mi>p</mi><mo>(</mo><mi>x</mi><mo>)</mo><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">s = E_p[f(x)] = \int_x p(x)f(x)dx
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.27195em;vertical-align:-0.9119499999999999em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.6105579999999999em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span></span></span></span></span></p>
<p>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>形式比较复杂，难以求积分，可以采用Monte Carlo方法，从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>中采样<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>个样本<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_1, x_2, \dots, x_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>来近似估计<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>p</mi></msub><mo>(</mo><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">E_p(f(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><mi>s</mi><mo>^</mo></mover><mi>n</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo>∼</mo><mi>p</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><mi>n</mi></munderover><mi>f</mi><mo>(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">\hat{s}_n = \frac{1}{n}\sum_{i=1, x_i \sim p(x)}^n f(x_i)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">s</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1674020000000005em;vertical-align:-1.5160049999999998em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.8089950000000001em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∼</span><span class="mord mathdefault mtight">p</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5160049999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>这种估计属于无偏估计，因为</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>[</mo><msub><mover accent="true"><mi>s</mi><mo>^</mo></mover><mi>n</mi></msub><mo>]</mo><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>E</mi><mo>[</mo><mi>f</mi><mo>(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>)</mo><mo>]</mo><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>s</mi><mo>=</mo><mi>s</mi></mrow><annotation encoding="application/x-tex">E[\hat{s}_n] = \frac{1}{n}\sum_{i=1}^n E[f(x_i)] = \frac{1}{n}\sum_{i=1}^n s = s
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">s</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span></span></p>
<p>而且，根据大数定律，如果样本<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是独立同分布的(i.i.d.)，只要<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtext>Var</mtext><mo>[</mo><mi>f</mi><mo>(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>)</mo><mo>]</mo></mrow><annotation encoding="application/x-tex">\text{Var}[f(x_i)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">Var</span></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span></span></span></span>有界，那么均值会收敛于期望值：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder><mi>lim</mi><mo>⁡</mo><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><msub><mover accent="true"><mi>s</mi><mo>^</mo></mover><mi>n</mi></msub><mo>=</mo><mi>s</mi></mrow><annotation encoding="application/x-tex">\lim_{n\rightarrow\infty}\hat{s}_n = s
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.39444em;vertical-align:-0.7em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.1em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">s</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span></span></p>
<p>但是，这些都依赖于从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">p(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>中采样。如果我们很难从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>中采样呢？我们需要找一个比较容易采样且定义域与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">p(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>相同的概率密度函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">q(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>，则<br>
<img src="https://kaluo-zz.github.io/post-images/1573457569751.PNG" alt=""></p>
<!-- $$
\begin{split}
E_p[f(x)] &= \int_x p(x)f(x)dx \\
          &= \int_x q(x) \frac{p(x)}{q(x)}f(x)dx \\ 
          &= E_{x\sim q(x)}[\frac{p(x)}{q(x)}f(x)] \\ 
          &\approx \frac{1}{n}\sum_{i=1, x_i \sim q(x)} \frac{p(x)}{q(x)}f(x)
\end{split}
$$ -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Matlab删除结构体中的字段]]></title>
        <id>https://kaluo-zz.github.io/post/matlab-shan-chu-jie-gou-ti-zhong-de-zi-duan</id>
        <link href="https://kaluo-zz.github.io/post/matlab-shan-chu-jie-gou-ti-zhong-de-zi-duan">
        </link>
        <updated>2019-10-30T02:51:58.000Z</updated>
        <content type="html"><![CDATA[<p>s = rmfield(s, field)<br>
删除单个字段</p>
<pre><code class="language-matlab">s.a = 1;
s.b = 2;
s.c = 3;

field = 'b';
s = rmfield(s, field)
</code></pre>
<p>删除多个字段</p>
<pre><code class="language-matlab">S.first = 1;
S.second = 2;
S.third = 3;
S.fourth = 4;

fields = {'first', 'fourth'};
S = rmfield(S, fields)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[利用coco api 获取mask并绘制]]></title>
        <id>https://kaluo-zz.github.io/post/li-yong-coco-api-huo-qu-mask-bing-hui-zhi</id>
        <link href="https://kaluo-zz.github.io/post/li-yong-coco-api-huo-qu-mask-bing-hui-zhi">
        </link>
        <updated>2019-10-30T00:29:17.000Z</updated>
        <content type="html"><![CDATA[<p>根据网络预测结果，构造coco格式的标注anns：</p>
<pre><code>{
    &quot;image_id&quot;: int,
    &quot;category_id&quot;: int,
    &quot;bbox&quot;: [x, y, w, h],
    &quot;score&quot;: float,
    &quot;segmentation&quot;: [[], [], ...]
}
</code></pre>
<p>举个例子，假如网络输出的格式为 pred = [xmin, ymin, xmax, ymax, scores, kps, clses]，则</p>
<pre><code class="language-python">color = [128, 0, 128]
if pred[4] &gt; thresh:
    image_id = batch['meta']['img_id'].cpu().numpy()[0]
    bbox = pred[:4].copy()
    bbox[2] -= bbox[0]
    bbox[3] -= bbox[1]
    bbox_out = list(map(lambda x: float(&quot;{:.2f}&quot;.format(x)), bbox))
    score = pred[4].copy()
    kps = pred[5:(5+2*num)].copy()
    kps = list(map(lambda x: float(&quot;{:.2f}&quot;.format(x)), kps)) # [x, y, x, y, ...]
    anns_pred = {
        &quot;image_id&quot;: int(image_id),
        &quot;category_id&quot;: 1, # 只是单个类别，person
        &quot;bbox&quot;: bbox_out,
        &quot;score&quot;: float(&quot;{:.2f}&quot;.format(score)),
        &quot;segmentation&quot;: [kps]
    }

    mask = coco.annToMask(anns)
    mask3 = np.ones((mask.shape[0], mask.shape[1], 3), dtype=np.float32)
    for j in range(3):
        mask3[:, :, j] = color[j]
        mask3[:, :, j] *= mask
    mask3 = mask3.astype(img.type)
    combined_img = cv2.addWeighted(mask3, 0.8, img, 1, 0)
</code></pre>
<p>上面示例只是显示了一个anns的img+mask结果。一张图像中的多个anns可以通过循环遍历来得到最终的mask:</p>
<pre><code>mask = np.zeros((h, w), dtype=np.float32)
for i in range(len(preds)):
    mask = cv2.bitwise_or(mask, coco.annToMask(preds[i]))
</code></pre>
<p>cv2.addWeighted()代码实例：<br>
https://www.programcreek.com/python/example/89436/cv2.addWeighted</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[GPU状态监测]]></title>
        <id>https://kaluo-zz.github.io/post/gpu-zhuang-tai-jian-ce</id>
        <link href="https://kaluo-zz.github.io/post/gpu-zhuang-tai-jian-ce">
        </link>
        <updated>2019-10-27T12:18:19.000Z</updated>
        <content type="html"><![CDATA[<h2 id="gpustat">gpustat</h2>
<p>项目地址：https://github.com/wookayin/gpustat</p>
<ol>
<li>安装：pip install gpustat</li>
<li>查看：gpustat</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python之上三角矩阵]]></title>
        <id>https://kaluo-zz.github.io/post/python-zhi-shang-san-jiao-ju-zhen</id>
        <link href="https://kaluo-zz.github.io/post/python-zhi-shang-san-jiao-ju-zhen">
        </link>
        <updated>2019-09-15T06:38:40.000Z</updated>
        <content type="html"><![CDATA[<h1 id="numpytrium-k0">numpy.triu(m, k=0)</h1>
<blockquote>
<p>Upper triangle of an array.</p>
<p>Return a copy of a matrix with the elements below the k-th diagonal zeroed.</p>
</blockquote>
<p>例子:</p>
<pre><code>np.triu(np.ones(5), 0)
array([[1., 1., 1., 1., 1.],
       [0., 1., 1., 1., 1.],
       [0., 0., 1., 1., 1.],
       [0., 0., 0., 1., 1.],
       [0., 0., 0., 0., 1.]])
&gt;&gt;&gt; np.triu(np.ones(5), 1)
array([[0., 1., 1., 1., 1.],
       [0., 0., 1., 1., 1.],
       [0., 0., 0., 1., 1.],
       [0., 0., 0., 0., 1.],
       [0., 0., 0., 0., 0.]])
&gt;&gt;&gt; np.triu(np.ones(5), 2)
array([[0., 0., 1., 1., 1.],
       [0., 0., 0., 1., 1.],
       [0., 0., 0., 0., 1.],
       [0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.]])
&gt;&gt;&gt; np.triu(np.ones(5), 3)
array([[0., 0., 0., 1., 1.],
       [0., 0., 0., 0., 1.],
       [0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.]])
&gt;&gt;&gt; np.triu(np.ones(5)) - np.triu(np.ones(5), 3)
array([[1., 1., 1., 0., 0.],
       [0., 1., 1., 1., 0.],
       [0., 0., 1., 1., 1.],
       [0., 0., 0., 1., 1.],
       [0., 0., 0., 0., 1.]])
&gt;&gt;&gt; mask = np.triu(np.ones(5)) - np.triu(np.ones(5), 3)
&gt;&gt;&gt; mask
array([[1., 1., 1., 0., 0.],
       [0., 1., 1., 1., 0.],
       [0., 0., 1., 1., 1.],
       [0., 0., 0., 1., 1.],
       [0., 0., 0., 0., 1.]])
&gt;&gt;&gt; mask[3, 0:1] = 1
&gt;&gt;&gt; mask[4, 0:2] = 1
&gt;&gt;&gt; mask
array([[1., 1., 1., 0., 0.],
       [0., 1., 1., 1., 0.],
       [0., 0., 1., 1., 1.],
       [1., 0., 0., 1., 1.],
       [1., 1., 0., 0., 1.]])
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pytorch之gather理解]]></title>
        <id>https://kaluo-zz.github.io/post/pytorch-zhi-gather-li-jie</id>
        <link href="https://kaluo-zz.github.io/post/pytorch-zhi-gather-li-jie">
        </link>
        <updated>2019-08-19T12:22:27.000Z</updated>
        <content type="html"><![CDATA[<pre><code>torch.gather(input, dim, index, out=None, sparse_grad=False) → Tensor
</code></pre>
<p>首先，我们要知道index的各个维度（除dim指定的维度外）的大小必须和input相同。比如，input维度是[3, 4, 3, 3]，若指定dim=1，则index的维度为[3, n, 3, 3]（n为指定的正整数）。index的维度就是gather函数输出数据的维度。</p>
<p>index[0, 0, 0, 0]表示在位置(0, 0, 0, 0)处的值（假如为3），将此值用以替换index[0, 0, 0, 0]的dim=1处，得[0, 3, 0, 0]，则表示提取input[0, 3, 0, 0]处的值放在out[0, 0, 0, 0]处。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux之shell命令]]></title>
        <id>https://kaluo-zz.github.io/post/linux-zhi-shell-ming-ling</id>
        <link href="https://kaluo-zz.github.io/post/linux-zhi-shell-ming-ling">
        </link>
        <updated>2019-08-16T11:56:13.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>去除文本中的空行</li>
</ol>
<pre><code>sed -i '/^$/d' loss.txt
</code></pre>
<ol start="2">
<li>提取文本中的第几列数据</li>
</ol>
<pre><code>cat segnet_0.log | awk '{print $22}' &gt; loss.txt
</code></pre>
]]></content>
    </entry>
</feed>